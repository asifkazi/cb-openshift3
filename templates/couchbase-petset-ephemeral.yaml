---
apiVersion: v1
kind: Template
metadata:
  name: couchbase-petset-ephemeral
  annotations:
    description: Couchbase database service, with ephemeral storage.
    iconClass: icon-couchbase
    tags: database,couchbase
objects:
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
  data:
    couchbase.username: "${COUCHBASE_USER}"
    couchbase.password: "${COUCHBASE_PASSWORD}"
    couchbase.cluster-id: ''
    couchbase.bucket.${COUCHBASE_BUCKET}: ''
    couchbase.data.memory-limit: "${MEMORY_LIMIT_DATA}"
    couchbase.index.memory-limit: "${MEMORY_LIMIT_INDEX}"
    couchbase.query.memory-limit: "${MEMORY_LIMIT_QUERY}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
  spec:
    ports:
    - name: couchbase
      port: 8091
    selector:
      name: "${DATABASE_SERVICE_NAME}"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${DATABASE_SERVICE_NAME}-query"
  spec:
    replicas: "${REPLICAS_QUERY"
    selector:
      name: "${DATABASE_SERVICE_NAME}"
      type: query
    template:
      metadata:
        labels:
          name: "${DATABASE_SERVICE_NAME}"
          app: couchbase
          type: query
      spec:
        containers:
        - name: couchbase
          image: "${REGISTRY}/openshift/${IMAGE_NAME}"
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 8091
            timeoutSeconds: 1
          env:
          - name: COUCHBASE_USER
            value: "${COUCHBASE_USER}"
          - name: COUCHBASE_PASSWORD
            value: "${COUCHBASE_PASSWORD}"
          ports:
          - containerPort: 8091
            name: couchbase
          resources:
            requests:
              memory: "${MEMORY_LIMIT_QUERY}"
              cpu: 0.25
            limits:
              memory: "${MEMORY_LIMIT_QUERY}"
          volumeMounts:
          - mountPath: "/opt/couchbase/var"
            name: data
        - name: couchbase-sidecar
          image: jetstackexperimental/couchbase-sidecar:0.0.2
          imagePullPolicy: Always
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          readinessProbe:
            httpGet:
              path: "/_status/ready"
              port: 8080
            timeoutSeconds: 3
          lifecycle:
            preStop:
              exec:
                command:
                - "/couchbase-sidecar"
                - stop
          ports:
          - containerPort: 8080
            name: sidecar
        volumes:
        - name: data
          emptyDir: {}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - couchbase
        from:
          kind: ImageStreamTag
          name: "${IMAGE_NAME}"
          namespace: "${NAMESPACE}"
      type: ImageChange
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}-data"
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  spec:
    clusterIP: None
    ports:
    - name: couchbase
      port: 8091
    selector:
      name: "${DATABASE_SERVICE_NAME}"
      type: data
- apiVersion: apps/v1alpha1
  kind: PetSet
  metadata:
    name: "${DATABASE_SERVICE_NAME}-data"
  spec:
    serviceName: "${DATABASE_SERVICE_NAME}-data"
    replicas: "${REPLICAS_DATA"
    template:
      metadata:
        labels:
          name: "${DATABASE_SERVICE_NAME}"
          app: couchbase
          type: data
        annotations:
          pod.alpha.kubernetes.io/initialized: 'true'
      spec:
        terminationGracePeriodSeconds: 86400
        containers:
        - name: couchbase
          image: "${REGISTRY}/openshift/${IMAGE_NAME}"
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 8091
            timeoutSeconds: 1
          env:
          - name: COUCHBASE_USER
            value: "${COUCHBASE_USER}"
          - name: COUCHBASE_PASSWORD
            value: "${COUCHBASE_PASSWORD}"
          ports:
          - containerPort: 8091
            name: couchbase
          resources:
            requests:
              memory: "${MEMORY_LIMIT_DATA}"
              cpu: 0.25
            limits:
              memory: "${MEMORY_LIMIT_DATA}"
          volumeMounts:
          - mountPath: "/opt/couchbase/var"
            name: data
        - name: couchbase-sidecar
          image: jetstackexperimental/couchbase-sidecar:0.0.2
          imagePullPolicy: Always
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          readinessProbe:
            httpGet:
              path: "/_status/ready"
              port: 8080
            timeoutSeconds: 3
          lifecycle:
            preStop:
              exec:
                command:
                - "/couchbase-sidecar"
                - stop
          ports:
          - containerPort: 8080
            name: sidecar
        volumes:
        - name: data
          emptyDir: {}
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}-index"
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  spec:
    clusterIP: None
    ports:
    - name: couchbase
      port: 8091
    selector:
      name: "${DATABASE_SERVICE_NAME}"
      type: index
- apiVersion: apps/v1alpha1
  kind: PetSet
  metadata:
    name: "${DATABASE_SERVICE_NAME}-index"
  spec:
    serviceName: "${DATABASE_SERVICE_NAME}-index"
    replicas: "${REPLICAS_INDEX"
    template:
      metadata:
        labels:
          name: "${DATABASE_SERVICE_NAME}"
          app: couchbase
          type: index
        annotations:
          pod.alpha.kubernetes.io/initialized: 'true'
      spec:
        terminationGracePeriodSeconds: 86400
        containers:
        - name: couchbase
          image: "${REGISTRY}/openshift/${IMAGE_NAME}"
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 8091
            timeoutSeconds: 1
          env:
          - name: COUCHBASE_USER
            value: "${COUCHBASE_USER}"
          - name: COUCHBASE_PASSWORD
            value: "${COUCHBASE_PASSWORD}"
          ports:
          - containerPort: 8091
            name: couchbase
          resources:
            requests:
              memory: "${MEMORY_LIMIT_INDEX}"
              cpu: 0.25
            limits:
              memory: "${MEMORY_LIMIT_INDEX}"
          volumeMounts:
          - mountPath: "/opt/couchbase/var"
            name: data
        - name: couchbase-sidecar
          image: jetstackexperimental/couchbase-sidecar:0.0.2
          imagePullPolicy: Always
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          readinessProbe:
            httpGet:
              path: "/_status/ready"
              port: 8080
            timeoutSeconds: 3
          lifecycle:
            preStop:
              exec:
                command:
                - "/couchbase-sidecar"
                - stop
          ports:
          - containerPort: 8080
            name: sidecar
        volumes:
        - name: data
          emptyDir: {}
parameters:
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  description: The name of the OpenShift Service exposed for the database.
  value: couchbase
  required: true
- name: COUCHBASE_USER
  displayName: Couchbase Connection Username
  description: Username for Couchbase user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: COUCHBASE_PASSWORD
  displayName: Couchbase Connection Password
  description: Password for the Couchbase connection user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: COUCHBASE_BUCKET
  displayName: Couchbase Bucket Name
  description: Name of the Couchbase database accessed.
  value: bucket
  required: true
- name: IMAGE_NAME
  value: couchbase-noroot:4.5.1-enterprise
  required: true
- name: REGISTRY
  value: "###REGISTRY_IP###"
  required: true
- name: REPLICAS_DATA
  displayName: Replica count of data nodes
  description: How many data nodes get provisioned
  value: '3'
- name: MEMORY_LIMIT_DATA
  displayName: Memory Limit for data nodes
  description: Maximum amount of memory data container can use.
  value: 1Gi
- name: REPLICAS_INDEX
  displayName: Replica count of data nodes
  description: How many index nodes get provisioned
  value: '3'
- name: MEMORY_LIMIT_INDEX
  displayName: Memory Limit for index nodes
  description: Maximum amount of memory index container can use.
  value: 1Gi
- name: REPLICAS_QUERY
  displayName: Replica count of data nodes
  description: How many query nodes get provisioned
  value: '3'
- name: MEMORY_LIMIT_QUERY
  displayName: Memory Limit for query nodes
  description: Maximum amount of memory query container can use.
  value: 1Gi
labels:
  template: couchbase-petset-ephemeral-template
